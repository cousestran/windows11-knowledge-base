/* ===== Base Styles ===== */
:root {
  --primary: #0078D4;
  --primary-dark: #106EBE;
  --accent: #107C10;
  --accent-yellow: #FFB900;
  --text-primary: #323130;
  --text-secondary: #605E5C;
  --background: #FFFFFF;
  --surface: #FAF9F8;
  --border: #EDEBE9;
  --shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  --shadow-hover: 0 4px 8px rgba(0, 0, 0, 0.15);
  --radius-sm: 4px;
  --radius-md: 8px;
  --radius-lg: 12px;
  --transition: all 0.2s ease-in-out;
}

/* ===== Hero Section ===== */
.hero {
  background: linear-gradient(135deg, var(--primary) 0%, #1E4A7A 100%);
  color: white;
  padding: 4rem 2rem;
  border-radius: var(--radius-lg);
  margin: 1rem 0 2.5rem;
  text-align: center;
  box-shadow: var(--shadow);
}

.hero h1 {
  margin: 0 0 1rem;
  font-size: 2.5rem;
  font-weight: 600;
}

.hero p {
  margin: 0;
  font-size: 1.25rem;
  opacity: 0.9;
}

/* ===== Search Bar ===== */
.search-container {
  max-width: 700px;
  margin: 2rem auto 3rem;
}

.search-bar {
  display: flex;
  background: var(--background);
  border: 1px solid var(--border);
  border-radius: 28px;
  padding: 0.5rem 0.5rem 0.5rem 1rem;
  box-shadow: var(--shadow);
  transition: var(--transition);
}

.search-bar:focus-within {
  box-shadow: 0 0 0 2px var(--primary);
  border-color: transparent;
}

.search-icon {
  display: flex;
  align-items: center;
  padding: 0.5rem;
  color: var(--text-secondary);
}

.search-input {
  flex: 1;
  border: none;
  outline: none;
  font-size: 1rem;
  padding: 0.5rem;
  background: transparent;
  color: var(--text-primary);
}

.search-button {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  background: var(--primary);
  color: white;
  border: none;
  border-radius: 20px;
  padding: 0.5rem 1.5rem;
  font-weight: 500;
  cursor: pointer;
  transition: var(--transition);
}

.search-button:hover {
  background: var(--primary-dark);
}

/* ===== Progress Steps ===== */
.progress-steps {
  margin: 2.5rem 0;
  padding: 0 1rem;
}

.progress-bar {
  height: 4px;
  background: var(--border);
  border-radius: 2px;
  margin: 0 0 1.5rem;
  overflow: hidden;
}

.progress {
  height: 100%;
  background: var(--primary);
  transition: width 0.3s ease;
}

.steps {
  display: flex;
  justify-content: space-between;
  position: relative;
}

.step {
  display: flex;
  flex-direction: column;
  align-items: center;
  position: relative;
  z-index: 1;
  flex: 1;
}

.step:not(:last-child)::after {
  content: '';
  position: absolute;
  top: 12px;
  left: 60%;
  right: -40%;
  height: 2px;
  background: var(--border);
  z-index: -1;
}

.step.active:not(:last-child)::after {
  background: var(--primary);
}

.step-indicator {
  width: 24px;
  height: 24px;
  border-radius: 50%;
  background: var(--border);
  color: var(--text-secondary);
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 0.75rem;
  font-weight: 600;
  margin-bottom: 0.5rem;
  transition: var(--transition);
}

.step.active .step-indicator {
  background: var(--primary);
  color: white;
}

.step-label {
  font-size: 0.875rem;
  color: var(--text-secondary);
  font-weight: 500;
  text-align: center;
}

.step.active .step-label {
  color: var(--primary);
  font-weight: 600;
}

/* ===== Getting Started ===== */
.getting-started {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 1.5rem;
  margin: 2rem 0 3rem;
}

.step-card {
  background: var(--surface);
  border-radius: var(--radius-md);
  padding: 1.5rem;
  border: 1px solid var(--border);
  transition: var(--transition);
}

.step-card:hover {
  transform: translateY(-2px);
  box-shadow: var(--shadow-hover);
  border-color: var(--primary);
}

.step-number {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: 28px;
  height: 28px;
  background: var(--primary);
  color: white;
  border-radius: 50%;
  font-weight: 600;
  font-size: 0.875rem;
  margin-bottom: 1rem;
}

.step-card h3 {
  margin: 0 0 0.5rem;
  color: var(--text-primary);
  font-size: 1.1rem;
}

.step-card p {
  margin: 0 0 1rem;
  color: var(--text-secondary);
  font-size: 0.9375rem;
  line-height: 1.5;
}

.step-link {
  display: inline-flex;
  align-items: center;
  color: var(--primary);
  font-weight: 500;
  text-decoration: none;
  font-size: 0.9375rem;
  transition: var(--transition);
}

.step-link .arrow {
  margin-left: 0.25rem;
  transition: transform 0.2s;
}

.step-link:hover .arrow {
  transform: translateX(2px);
}

/* ===== Card Grid ===== */
.card-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
  gap: 1.5rem;
  margin: 2.5rem 0 3rem;
}

.card {
  background: var(--surface);
  border-radius: var(--radius-md);
  padding: 1.5rem;
  border: 1px solid var(--border);
  transition: var(--transition);
  display: flex;
  flex-direction: column;
  height: 100%;
}

.card:hover {
  transform: translateY(-4px);
  box-shadow: var(--shadow-hover);
  border-color: var(--primary);
}

.card-icon {
  width: 48px;
  height: 48px;
  display: flex;
  align-items: center;
  justify-content: center;
  background: rgba(0, 120, 212, 0.1);
  border-radius: var(--radius-sm);
  margin-bottom: 1rem;
}

.card-icon svg {
  width: 24px;
  height: 24px;
}

.card h3 {
  margin: 0 0 0.5rem;
  color: var(--text-primary);
  font-size: 1.125rem;
  font-weight: 600;
}

.card p {
  margin: 0 0 1.25rem;
  color: var(--text-secondary);
  font-size: 0.9375rem;
  line-height: 1.5;
  flex-grow: 1;
}

.card-link {
  display: inline-flex;
  align-items: center;
  color: var(--primary);
  font-weight: 500;
  text-decoration: none;
  font-size: 0.9375rem;
  margin-top: auto;
}

.card-link span {
  margin-right: 0.5rem;
}

.card-link svg {
  transition: transform 0.2s;
}

.card-link:hover svg {
  transform: translateX(2px);
}

/* ===== Category Grid ===== */
.category-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));
  gap: 1.5rem;
  margin: 2.5rem 0 3rem;
}

.category-card {
  background: var(--surface);
  border-radius: var(--radius-md);
  padding: 1.5rem;
  text-decoration: none;
  color: inherit;
  transition: var(--transition);
  border-left: 4px solid var(--primary);
  display: flex;
  flex-direction: column;
  height: 100%;
  border: 1px solid var(--border);
}

.category-card:hover {
  transform: translateY(-2px);
  box-shadow: var(--shadow-hover);
  border-left-color: var(--accent);
}

.category-card h3 {
  margin: 0 0 0.5rem;
  color: var(--primary);
  font-size: 1.125rem;
  font-weight: 600;
  transition: var(--transition);
}

.category-card:hover h3 {
  color: var(--accent);
}

.category-card p {
  margin: 0;
  color: var(--text-secondary);
  font-size: 0.9375rem;
  line-height: 1.5;
}

/* ===== Responsive Adjustments ===== */
@media (max-width: 1023px) {
  .hero {
    padding: 3rem 1.5rem;
  }
  
  .hero h1 {
    font-size: 2rem;
  }
  
  .hero p {
    font-size: 1.1rem;
  }
  
  .card-grid, .category-grid {
    grid-template-columns: repeat(2, 1fr);
  }
}

@media (max-width: 640px) {
  .hero {
    padding: 2.5rem 1.25rem;
    margin: 0.5rem 0 2rem;
    border-radius: var(--radius-md);
  }
  
  .hero h1 {
    font-size: 1.75rem;
    margin-bottom: 0.75rem;
  }
  
  .search-bar {
    flex-direction: column;
    padding: 0.5rem;
    border-radius: var(--radius-md);
  }
  
  .search-input {
    width: 100%;
    padding: 0.75rem 0.5rem;
  }
  
  .search-button {
    width: 100%;
    justify-content: center;
    margin-top: 0.5rem;
    border-radius: 20px;
  }
  
  .card-grid, .category-grid, .getting-started {
    grid-template-columns: 1fr;
    gap: 1.25rem;
  }
  
  .steps {
    gap: 0.5rem;
  }
  
  .step:not(:last-child)::after {
    display: none;
  }
  
  .step-label {
    font-size: 0.8125rem;
  }
}

/* ===== Dark Mode Support ===== */
[data-md-color-scheme="slate"] {
  --text-primary: #FFFFFF;
  --text-secondary: #A19F9D;
  --background: #1E1E1E;
  --surface: #252423;
  --border: #3B3A39;
  --shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
  --shadow-hover: 0 4px 12px rgba(0, 0, 0, 0.4);
}

[data-md-color-scheme="slate"] .card,
[data-md-color-scheme="slate"] .step-card,
[data-md-color-scheme="slate"] .category-card {
  background: var(--surface);
  border-color: var(--border);
}
